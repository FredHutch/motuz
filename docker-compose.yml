version: '3'

services:

    nginx:
        container_name: nginx
        network_mode: host
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        volumes:
            - .:/code
            - /tmp
            - /root/certs:/certs/:ro
        ports:
            - 443:443
            - 80:80


    app:
        container_name: app
        network_mode: host
        build:
            context: .
            dockerfile: ./docker/app/Dockerfile
        volumes:
            - .:/code

            # Authentication
            # passwd/group should be mounted into any container
            # needing to share the user/group IDs
            - /var/run/nscd/socket:/var/run/nscd/socket
            - /etc/krb5.conf:/etc/krb5.conf
            - /etc/pam.d:/etc/pam.d

            # Authentication cannot mount individual files, because the mapping is
            # based on the inode
            - /etc:/etc:ro

            - /tmp
            - /efs/:/efs/
            - /fh/scratch/:/fh/scratch/
            - /home:/home

        ports:
            - 5000:5000
            - 5001:5001


    celery:
        container_name: celery
        network_mode: host
        build:
            context: .
            dockerfile: ./docker/celery/Dockerfile
        volumes:
            - .:/code

            # Authentication
            # passwd/group should be mounted into any container
            # needing to share the user/group IDs
            - /var/run/nscd/socket:/var/run/nscd/socket
            - /etc/krb5.conf:/etc/krb5.conf
            - /etc/pam.d:/etc/pam.d

            # Authentication cannot mount individual files, because the mapping is
            # based on the inode
            - /etc:/etc:ro

            - /efs/:/efs/
            - /fh/scratch:/fh/scratch

        hostname: 0.0.0.0
        depends_on:
            - app


    rabbitmq:
        container_name: rabbitmq
        network_mode: host
        image: rabbitmq:3-management
        ports:
            - 5672:5672
            - 15672:15672
        expose:
            - 5672
        hostname: 0.0.0.0


    database:
        container_name: database
        network_mode: host
        image: postgres:11.3
        ports:
            - 5432:5432
        hostname: 0.0.0.0
        volumes:
            - /docker/volumes/postgres:/var/lib/postgresql/data


    # migrate:
    #     container_name: database
    #     network_mode: host
    #     build:
    #         context: .
    #         dockerfile: ./docker/migrate/Dockerfile
    #     depends_on:
    #       - database
    #       - app
